@page "/"
@using Tribulus.MarketPlace.Sales.Permissions
@using Tribulus.MarketPlace.Marketing.Permissions
@using Tribulus.MarketPlace.Inventory.Permissions
@using Tribulus.MarketPlace.Localization
@using Volo.Abp.MultiTenancy
@inherits MarketPlaceAdminComponentBase
@attribute [Authorize(MarketingPermissions.Products.Default)]

@inject AbpBlazorMessageLocalizerHelper<MarketPlaceResource> LH

<Card>
    <CardHeader>
        @* ************************* PAGE HEADER ************************* *@
        <Row>
            <Column ColumnSize="ColumnSize.Is6">
                <h2>@L["Products"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.Is6" Flex="Flex.JustifyContent.End">

                    @*<Button Type="@ButtonType.Button" Color="Color.Primary"
                            Clicked="OpenCreateProductModalAsync" 
                            RequiredPolicy="@MarketPlaceAdminPermissions.Products.Create">
                        @L["NewProduct"]
                    </Button>*@

            </Column>
        </Row>

    </CardHeader>
    <CardBody>
        @* ************************* SEARCH ************************* *@
        @*<Form>*@
        <div id="FilterSection" class="row mt-3">

         @*   <Column ColumnSize="ColumnSize.Is12">
                <Field>
                    <FieldLabel>@L["Name"]</FieldLabel>
                    <TextEdit TValue="string" KeyPress="OnKeyPress" @bind-Text="@Filter.Name" />
                </Field>
            </Column>*@

        </div>
        @*</Form>*@
        @* ************************* DATA GRID ************************* *@
        @*<DataGrid TItem="ProductDto"
                  Data="ProductList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridEntityActionsColumn TItem="ProductDto">
                    <DisplayTemplate>
                        <EntityActions TItem="ProductDto">
                            <EntityAction TItem="ProductDto"
                                          RequiredPolicy="@MarketPlaceAdminPermissions.Products.Update"
                                          Clicked="() => OpenEditProductModalAsync(context)"
                                          Text="@L["Edit"]">
                            </EntityAction>
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>

                <DataGridColumn TItem="ProductDto"
                                Field="Name"
                                Caption="@L["Name"]">
                </DataGridColumn>

                <DataGridColumn TItem="ProductDto"
                                Field="Description"
                                Caption="@L["Description"]">
                </DataGridColumn>

                <DataGridColumn TItem="ProductDto"
                                Field="Price"
                                Caption="@L["Price"]">
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>*@

    </CardBody>
</Card>
@*
<Modal @ref="EditProductModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingProduct.Name</ModalTitle>
                <CloseButton Clicked="() => EditProductModal.Hide()" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingProduct" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingProduct.Name">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["Description"] *</FieldLabel>
                        <MemoEdit Rows="4" TValue="string" @bind-Text="@EditingProduct.Description">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </MemoEdit>
                    </Field>
                    <Validation>
                        <Field>
                            <FieldLabel>@L["Price"]</FieldLabel>
                            <NumericEdit TValue="decimal" @bind-Value="@EditingProduct.Price">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericEdit>
                        </Field>
                    </Validation>

                    <Validation>
                        <Field>
                            <FieldLabel>@L["StockCount"]</FieldLabel>
                            <NumericEdit TValue="int" @bind-Value="@EditingProduct.StockCount">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericEdit>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="() => EditProductModal.Hide()">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateProductAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="CreateProductModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@CreatingProduct.Name</ModalTitle>
                <CloseButton Clicked="() => CreateProductModal.Hide()" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@CreatingProduct" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"] *</FieldLabel>
                            <TextEdit @bind-Text="@CreatingProduct.Name">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["Description"] </FieldLabel>
                        <MemoEdit Rows="4" TValue="string" @bind-Text="@CreatingProduct.Description">
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </MemoEdit>
                    </Field>
                    <Validation>
                        <Field>
                            <FieldLabel>@L["Price"]</FieldLabel>
                            <NumericEdit TValue="decimal" @bind-Value="@CreatingProduct.Price">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericEdit>
                        </Field>
                    </Validation>

                    <Validation>
                        <Field>
                            <FieldLabel>@L["StockCount"]</FieldLabel>
                            <NumericEdit TValue="int" @bind-Value="@CreatingProduct.StockCount">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericEdit>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="() => CreateProductModal.Hide()">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateProductAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>*@

@*

<Modal @ref="EditProductModal">
    <ModalContent Centered="true" Size="ModalSize.Large">
        <Form id="EditProductForm">
            <ModalHeader>
                <ModalTitle>@L["UpdateProduct"]</ModalTitle>
                <CloseButton Clicked="() => EditProductModal.Hide()" />
            </ModalHeader>
            <ModalBody>
                <Validations Mode="ValidationMode.Auto" Model="@EditProductModal" ValidateOnLoad="false">
                    <Validation>
                        <Field>
                            <FieldLabel>@L["Name"] *</FieldLabel>
                            <TextEdit TValue="string" @bind-Text="@EditingProduct.Name">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Validation>
                        <Field>
                            <FieldLabel>@L["Description"] *</FieldLabel>
                            <MemoEdit Rows="4" TValue="string" @bind-Text="@EditingProduct.Description">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </MemoEdit>
                        </Field>
                    </Validation>

                    <Validation>
                        <Field>
                            <FieldLabel>@L["Price"]</FieldLabel>
                            <NumericEdit TValue="decimal" @bind-Text="@EditingProduct.Price">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericEdit>
                        </Field>
                    </Validation>

                    <Validation>
                        <Field>
                            <FieldLabel>@L["StockCount"]</FieldLabel>
                            <NumericEdit TValue="int" @bind-Text="@EditingProduct.StockCount">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericEdit>
                        </Field>
                    </Validation>


                </Validations>

            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="() => EditProductModal.Hide()">
                    @L["Cancel"]
                </Button>
                <Button Type="ButtonType.Submit" PreventDefaultOnSubmit="true" Color="Color.Primary"
                        Clicked="UpdateProductAsync">
                    <i class="fa-check fa"></i> @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>*@
